name: Build and Push

on:
  push:
    branches:
      - main
      - 'releases/**'
      - 'branch1'

jobs:
  security_scan:
    name: GITHUB CICD JOB1
    runs-on: ubuntu-latest
    if: ${{ ! startsWith(github.event.head_commit.message, '#NORUN') }}  # do not run the job if commit message starts with #NORUN

    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16' # Set the Go version you are using

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        id: trivy
        continue-on-error: true
        with:
          scan-type: 'fs'
          severity: 'CRITICAL'
          format: 'table'
          output : 'trivy-report.txt'
          exit-code: 1

      # Dump the steps context to debug   
      #- name: Dump steps context
      #  env:
      #    STEPS_CONTEXT: ${{ toJson(steps) }}
      #  run: echo "$STEPS_CONTEXT"
    
          
          
      - name: Slack Failure Notification
        if: steps.trivy.outcome == 'failure'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_NAME }}
          SLACK_TITLE: "*Scan failed - ${{ secrets.SLACK_USERNAME }}*"
          SLACK_MESSAGE: 'Failed trivy scan, see uploaded report'
          SLACK_USERNAME: ${{ secrets.SLACK_USERNAME }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Slack upload scan report
        if: steps.trivy.outcome == 'failure'
        uses: MeilCli/slack-upload-file@v4
        with:
          slack_token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: 'trivy-report.txt'
          initial_comment: 'Scan report by ${{ secrets.SLACK_USERNAME }}'
          
      - name: Exit workflow if vulnerability found
        if: steps.trivy.outcome == 'failure'
        run: |
            exit 1
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Build and Push container images
        uses: docker/build-push-action@v4.0.0
        id: build-and-push
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_APP }}:${{ github.sha }}

      - name: Sign image with a key
        run: |
         cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_APP }}@${DIGEST}
        env:
          TAGS: latest1
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}

      - name: Slack Success Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_NAME }}
          SLACK_MESSAGE: "*Name*: ${{ secrets.SLACK_USERNAME }}\n*Metriculation*: A0290885M\n*Email*: e1327916@u.nus.edu\n*Git*: https://github.com/${{ github.repository }}\n*Image* : https://hub.docker.com/repository/docker/${{ secrets.DOCKERHUB_USERNAME }}/app/general"
          SLACK_TITLE: "*Image build and Signed*"
          SLACK_USERNAME: ${{ secrets.SLACK_USERNAME }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

